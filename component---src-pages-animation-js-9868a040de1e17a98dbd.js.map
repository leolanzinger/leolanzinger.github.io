{"version":3,"file":"component---src-pages-animation-js-9868a040de1e17a98dbd.js","mappings":"mLAiBE,MAjBF,SAAuBA,EAAMC,GAAO,IAGZC,EAAGC,EAAGC,EAAQC,EAAOC,EAHV,OAC/BC,KAAKC,UAAU,EAAG,EAAGR,EAAKS,MAAOT,EAAKU,QAElBR,EAWTD,EAAKC,EAXOC,EAWJF,EAAKE,EAXEC,EAWCH,EAAKG,OAXEC,EAWMJ,EAAKI,MAV3C,EAAKM,OACL,EAAKC,YACL,EAAKC,IAAIX,EAAGC,EAAGC,EAAQ,EAAa,EAAVU,KAAKC,IAC/B,EAAKC,UAAYX,EACjB,EAAKY,YAAcX,EACnB,EAAKY,OACL,EAAKC,YACL,EAAKC,SAIT,ECsFF,EAhGwB,WACpB,IACMC,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,WACtDC,GAAUC,EAAAA,EAAAA,QAAO,CAAErB,EAAG,GAAIC,EAAG,GAAIqB,GAAI,IAAKC,GAAI,IAAKrB,OAFtC,EAE0DC,MAAOgB,EAAO,KACrFK,GAAYH,EAAAA,EAAAA,QAAO,MACrBvB,EAAO,CACPS,MAAO,EACPC,OAAQ,GAERiB,GAAU,EA2BRC,EAAe,SAAfA,IACWN,EAAQO,QAChBzB,QAAU,EACVuB,GAASG,sBAAsBF,EACxC,EAEMG,EAAY,SAAZA,IACF,IAAM9B,EAAOqB,EAAQO,QAEjB5B,EAAKG,OA5CM,GA6CXH,EAAKG,QAAWH,EAAKG,OAAS,EAC9B0B,sBAAsBC,IAGtB9B,EAAKG,OAjDM,CAmDnB,EASM4B,EAAO,SAAPA,IANc,IACVC,EAMDP,EAAUG,UANTI,EAAMP,EAAUG,QAAQK,WAAW,MAEzCC,EAAAA,KAAmBF,EAAKjC,EAAMsB,EAAQO,SAMtCC,sBAAsBE,GAC1B,EAoBA,OAjBAI,EAAAA,EAAAA,YAAU,WAKN,SAASC,IACLX,EAAUG,QAAQpB,MAAQT,EAAKS,MAC/BiB,EAAUG,QAAQnB,OAASV,EAAKU,MACpC,CAGA,OAVAV,EAAKS,MAAQ6B,OAAOC,WACpBvC,EAAKU,OAAS4B,OAAOE,YACrBd,EAAUG,QAAQpB,MAAQT,EAAKS,MAC/BiB,EAAUG,QAAQnB,OAASV,EAAKU,OAMhC4B,OAAOG,iBAAiB,UAAU,kBAAMJ,GAAc,IAC/C,WAELC,OAAOI,oBAAoB,SAAUL,EACvC,CACF,GAAG,IAEE,0BACHM,UAAU,SACVlC,MAAOT,EAAKS,MACZC,OAAQV,EAAKS,MACbmC,IAAKlB,EACLmB,YA9EoB,SAACC,GACrB,IAAI5C,EAAI4C,EAAMC,QACV5C,EAAI2C,EAAME,QACR/C,EAAOqB,EAAQO,QACrB5B,EAAKC,EAAIA,EACTD,EAAKE,EAAIA,EACT6B,GACJ,EAwEIiB,YAtEoB,WACpBtB,GAAU,EACVG,sBAAsBF,EAC1B,EAoEIsB,UAlEkB,WAClBvB,GAAU,EACV,IAAM1B,EAAOqB,EAAQO,QACrBsB,QAAQC,IAAI,kBAAmBnD,EAAKI,OACpCJ,EAAKI,MAAQgB,EAAOP,KAAKuC,MAAsB,EAAhBvC,KAAKwC,WACpCH,QAAQC,IAAI,cAAenD,EAAKI,OAChC0B,GACJ,GA6DJ,C,yFC3FA,UAJsB,WAClB,OAAO,gBAAC,IAAe,KAC3B,EAIO,IAAMwB,EAAO,WAAH,OAAS,8DAA6C,C","sources":["webpack://leolanzinger.github.io/./src/components/framerender.js","webpack://leolanzinger.github.io/./src/components/AnimationCanvas.js","webpack://leolanzinger.github.io/./src/pages/animation.js"],"sourcesContent":["function frameRenderer(size, ball) {\n    this.clearRect(0, 0, size.width, size.height);\n  \n    const drawCircle = (x, y, radius, color, alpha) => {\n      this.save();\n      this.beginPath();\n      this.arc(x, y, radius, 0, Math.PI * 2);\n      this.fillStyle = color;\n      this.globalAlpha = alpha;\n      this.fill();\n      this.closePath();\n      this.restore();\n    };\n  \n    drawCircle(ball.x, ball.y, ball.radius, ball.color);\n  }\n  \n  export default frameRenderer;\n  ","import * as React from \"react\"\nimport { useRef, useEffect } from \"react\";\nimport \"../styles/style.css\"\nimport frameRenderer from \"./framerender\";\n\nconst AnimationCanvas = () => {\n    const baseRadius = 2;\n    const colors = [\"#F1C40F\", \"#1ABC9C\", \"#3498DB\", \"#9B59B6\", \"#95A5A6\"];\n    const ballRef = useRef({ x: 50, y: 50, vx: 3.9, vy: 3.9, radius: baseRadius, color: colors[0] });\n    const canvasRef = useRef(null);\n    let size = {\n        width: 0,\n        height: 0\n    }\n    let mouseUp = true;\n\n    // MOUSE HANDLING\n    const handleMouseMove = (event) => {\n        var x = event.clientX;\n        var y = event.clientY;\n        const ball = ballRef.current;\n        ball.x = x;\n        ball.y = y;\n        tick();\n    }\n\n    const handleMouseDown = () => {\n        mouseUp = false;\n        requestAnimationFrame(increaseBall);\n    }\n\n    const handleMouseUp = () => {\n        mouseUp = true;\n        const ball = ballRef.current;\n        console.log(\"current color: \", ball.color);\n        ball.color = colors[Math.floor(Math.random() * 4)];\n        console.log(\"new color: \", ball.color);\n        resetBall();\n    }\n\n    // BALL ANIMATION\n    const increaseBall = () => {\n        const ball = ballRef.current;\n        ball.radius += 4;\n        if (!mouseUp) requestAnimationFrame(increaseBall);\n    }\n\n    const resetBall = () => {\n        const ball = ballRef.current;\n        // bounce animation\n        if (ball.radius > baseRadius) {\n            ball.radius -= (ball.radius / 6);\n            requestAnimationFrame(resetBall);\n        }\n        else {\n            ball.radius = baseRadius;\n        }\n    }\n\n    // FRAME RENDERING\n    const renderFrame = () => {\n        const ctx = canvasRef.current.getContext(\"2d\");\n        // updateBall();\n        frameRenderer.call(ctx, size, ballRef.current);\n      };    \n\n    const tick = () => {\n        if (!canvasRef.current) return;\n        renderFrame();\n        requestAnimationFrame(tick);\n    };\n\n    // ON MOUNT\n    useEffect(() => {\n        size.width = window.innerWidth;\n        size.height = window.innerHeight;\n        canvasRef.current.width = size.width;\n        canvasRef.current.height = size.height;\n        function handleResize() {    \n            canvasRef.current.width = size.width;\n            canvasRef.current.height = size.height;\n        }\n        // requestIdRef.current = requestAnimationFrame(tick);\n        window.addEventListener(\"resize\", () => handleResize());\n        return () => {\n        //   cancelAnimationFrame(requestIdRef.current);\n          window.removeEventListener(\"resize\", handleResize);\n        };\n      }, []);\n\n    return <canvas\n        className=\"canvas\"\n        width={size.width}\n        height={size.width}\n        ref={canvasRef}\n        onMouseMove={handleMouseMove}\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n    />;\n}\n\nexport default AnimationCanvas;\n","import * as React from \"react\"\nimport \"../styles/style.css\"\nimport AnimationCanvas from \"../components/AnimationCanvas\";\n\nconst AnimationPage = () => {\n    return <AnimationCanvas />;\n}\n\nexport default AnimationPage\n\nexport const Head = () => <title>Leonardo Lanzinger - animation</title>"],"names":["size","ball","x","y","radius","color","alpha","this","clearRect","width","height","save","beginPath","arc","Math","PI","fillStyle","globalAlpha","fill","closePath","restore","colors","ballRef","useRef","vx","vy","canvasRef","mouseUp","increaseBall","current","requestAnimationFrame","resetBall","tick","ctx","getContext","frameRenderer","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","className","ref","onMouseMove","event","clientX","clientY","onMouseDown","onMouseUp","console","log","floor","random","Head"],"sourceRoot":""}